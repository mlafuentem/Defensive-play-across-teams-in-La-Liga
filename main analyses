library(StatsBombR)
library(tidyr)
library(dplyr)
library(ggplot2)
library(SBpitch)
library(forcats)
library(grid)

Comp <- FreeCompetitions()     
Matches <- FreeMatches(Comp) 
StatsBombData <- free_allevents(MatchesDF = Matches, Parallel = T)
Esp_stats <- StatsBombData %>% filter(team.name== 'Espanyol')
Esp_stats <- allclean(Esp_stats)
LaLiga <- FreeCompetitions() %>% filter(competition_id== 11 & season_id== 90)
Matches_sp <- FreeMatches(LaLiga)
Events_LL <- free_allevents(MatchesDF = Matches_sp, Parallel = T)
Events_LL <- allclean(Events_LL)

shots_goals= Esp_stats %>% group_by(player.name) %>% summarise(shots= sum(type.name== 'Shot', na.rm = TRUE)/ n_distinct(match_id), goals= sum(shot.outcome.name== 'Goal', na.rm = TRUE)/ n_distinct(match_id)) %>% arrange(desc(goals)) %>% slice_head(n=9)

shots_goals_long= pivot_longer(shots_goals, cols = c(shots, goals), names_to = 'variable', values_to = 'value')
shots_goals_long

ggplot(data= shots_goals_long, aes(x= reorder(player.name, value) , y= value, fill= variable))+
  geom_bar(stat = 'identity', position= 'dodge')+
  labs(y= 'events per game')+
  theme(axis.title.y = element_blank())+
  #scale_y_continuous(expand = c(0,0))+
  coord_flip()+
  theme_SB()+
  scale_fill_manual(values = c('green', 'orange'))

player_shots <- Esp_stats %>% group_by(player.name, player.id) %>% summarise(shots= sum(type.name== 'Shot', na.rm= TRUE))

player_shots

player_minutes <- get.minutesplayed(Esp_stats)

View(player_minutes)

player_minutes <- player_minutes %>% group_by(player.id, player.name) %>% summarise(minutes_game= sum(minutes.played)/n_distinct(match_id))

player_minutes <- player_minutes[-c(1:8),]
player_minutes

player_shots= left_join(player_minutes, player_shots, by= c("player.name", 'player.id'))
player_shots <- player_shots %>% select(player.id, player.name, minutes_game, shots)

player_shots <- player_shots %>% mutate(nineties= minutes_game/90)

player_shots <- player_shots %>% mutate(shots_90= shots/nineties)

player_shots <- player_shots %>% arrange(desc(shots_90))

Darder_passes <- Esp_stats %>% filter(player.id== '3236' & type.name== 'Pass' & is.na(pass.outcome.name)) %>% filter(pass.end_location.x>=102 & pass.end_location.y<= 62 & pass.end_location.y>=18)

create_Pitch() +
  geom_segment(data = Darder_passes, aes(x = location.x, y = location.y, xend = pass.end_location.x, yend = pass.end_location.y), 
               lineend = "round", size = 0.5, colour = "#000000", arrow = arrow(length = unit(0.07, "inches"), ends = "last", type = "open")) +
  labs(title = "Sergi Darder, Completed Box Passes", subtitle = "All competitions played until 2021") +
scale_y_reverse() + 
coord_fixed(ratio = 105/100)

Melendo_id <- Esp_stats %>% filter(str_detect(player.name, 'Melendo')) %>% select(player.id) %>% slice(n=1) %>% pull()

Melendo_id

Melendo_passes <- Esp_stats %>% filter(player.id== Melendo_id & type.name== 'Pass' & is.na(pass.outcome.name)) %>% filter(pass.end_location.x>=102 & pass.end_location.y<= 62 & pass.end_location.y>=18)

create_Pitch() +
  geom_segment(data = Melendo_passes, aes(x = location.x, y = location.y, xend = pass.end_location.x, yend = pass.end_location.y), 
               lineend = "round", size = 0.5, colour = "#000000", arrow = arrow(length = unit(0.07, "inches"), ends = "last", type = "open")) +
  labs(title = "Óscar Melendo, Completed Box Passes", subtitle = "All competitions played until 2021") +
  scale_y_reverse() + 
  coord_fixed(ratio = 105/100)

Passess_all <- Esp_stats %>% group_by(player.id, player.name) %>% summarise(good_p= (sum(is.na(pass.outcome.name))/ (sum(is.na(pass.outcome.name))+ sum(!is.na(pass.outcome.name))))*100) %>% arrange(desc(good_p))

Passess_all_off <- Esp_stats %>% group_by(player.id, player.name) %>% filter(pass.end_location.x>60) %>% summarise(good_p_off= (sum(is.na(pass.outcome.name))/ (sum(is.na(pass.outcome.name))+ sum(!is.na(pass.outcome.name))))*100, n_good_passes=sum(is.na(pass.outcome.name)), n_bad_passes= sum(!is.na(pass.outcome.name)))%>% arrange(desc(good_p_off))

inv_p <- sort(Passess_all_off$good_p_off)

Passess_all_off$rank <- rank(inv_p, ties.method = 'first')

?rank
?arrange

minutes <- get.minutesplayed(Esp_stats)

minutes_played <- minutes %>% group_by(player.id, player.name) %>% summarise(minutes_total= sum(minutes.played))

minutes_played <- minutes_played[-c(1:7),]

Passess_all_off <- left_join (Passess_all_off, minutes_played, by= c('player.id' , 'player.name'))


Passess_all_off <- Passess_all_off %>% mutate(good_p_per_m= n_good_passes/ minutes_total)

Passess_all_off <- Passess_all_off %>% mutate(m_for_good_pass= 1/ good_p_per_m)

names(StatsBombData)

xGA <- Events_LL %>% filter(type.name== 'Shot') %>% select(shot.key_pass_id, xGA= shot.statsbomb_xg)

shot_assists <- left_join(Events_LL, xGA, by= c('id'= 'shot.key_pass_id')) %>% select(team.name, player.name, player.id, type.name, pass.shot_assist, pass.goal_assist, xGA) %>% filter(pass.goal_assist== TRUE | pass.shot_assist== TRUE) %>% arrange(desc(xGA))

player_xGA <- shot_assists %>% group_by(player.name, player.id, team.name) %>% summarise(xGA= sum(xGA, na.rm = TRUE))%>% arrange(desc(xGA))

player_xG <- Events_LL %>% filter(type.name== 'Shot') %>% filter(shot.type.name != 'Penalty' | is.na(shot.type.name)) %>% group_by(player.id, player.name, team.name) %>% summarise(xG= sum(shot.statsbomb_xg)) %>% left_join(player_xGA) %>% mutate(xG_xGA= sum(xG + xGA)) %>% arrange(desc(xG_xGA))

minutes_played_LL <- get.minutesplayed(Events_LL) %>% group_by(player.id, player.name, team.name) %>% summarise(total_minutes= sum(minutes.played))

player_xG <- player_xG %>% left_join(minutes_played_LL) %>% group_by(player.id, player.name, team.name) %>% mutate(nineties= total_minutes/90) %>% mutate(xG_90= xG/nineties, xGA_90= xGA/nineties, xG_xGA_90= xG_xGA/ nineties) %>% arrange(desc(xG_xGA_90))

chart <- player_xG %>% ungroup() %>% filter(total_minutes>=600) %>% slice_max(xG_xGA_90, n= 15) %>% arrange(desc(xG_xGA_90))

chart <- chart %>% select(2, 9:11) %>% pivot_longer(-player.name, names_to = 'variable', values_to = 'value')

chart <- chart %>% mutate(player.name= recode(player.name, 'Francisco António Machado Mota de Castro Trincão'= ' Francisco Trincão', 'Lionel Andrés Messi Cuccittini'= 'Leo Messi', 'Martin Braithwaite Christensen'= 'Martin Braithwaite', 'Philippe Coutinho Correia'= 'Philippe Coutinho', 'Ronald Federico Araújo da Silva'= 'Ronald Araújo', 'Sergio Busquets i Burgos'= 'Sergio Busquets')) %>% arrange(desc(value)) %>% mutate(variable= fct_relevel(variable, 'xG_xGA_90', 'xGA_90', 'xG_90'))

ggplot(data= chart, aes(x= player.name, y= value, fill= variable))+
  geom_bar(stat='identity')+
  theme(axis.title.y = element_blank())+
  labs(title = 'Goal expectation: shot, assistance and combined')+
  coord_flip()+
  scale_fill_manual(values = c('gray', 'blue', 'green'), labels= c('combined', 'assistance', 'shot'))

heatmap <- Events_LL %>% mutate(location.x= ifelse(location.x>120, 120, location.x), location.y= ifelse(location.y>80, 80, location.y), location.x= ifelse(location.x<0, 0, location.x), location.y= ifelse(location.y<0, 0, location.y))

heatmap$x.bin <- cut(heatmap$location.x, breaks = seq(0, 120, 20), include.lowest = TRUE)                    

heatmap$y.bin <- cut(heatmap$location.y, breaks = seq(0, 80, 20), include.lowest = TRUE)                    

heatmap <- heatmap %>% filter(type.name=="Pressure" | duel.type.name=="Tackle" | type.name=="Foul Committed" | type.name=="Interception" | type.name=="Block") %>% group_by(team.name) %>% mutate(total_DA= n()) %>% group_by(team.name, x.bin, y.bin) %>% summarise(total_DA= max(total_DA), bin_DA= n(), bin_pct= bin_DA*100/ total_DA, location.x= median(location.x), location.y= median(location.y)) %>% group_by(x.bin, y.bin) %>% mutate(league_ave= mean(bin_pct)) %>% group_by(team.name, x.bin, y.bin) %>% mutate(diffs= bin_pct- league_ave)

defensiveactivitycolors <- c("#dc2429", "#dc2329", "#df272d", "#df3238", "#e14348", "#e44d51", "#e35256", "#e76266", "#e9777b", "#ec8589", "#ec898d", "#ef9195", "#ef9ea1", "#f0a6a9", "#f2abae", "#f4b9bc", "#f8d1d2", "#f9e0e2", "#f7e1e3", "#f5e2e4", "#d4d5d8", "#d1d3d8", "#cdd2d6", "#c8cdd3", "#c0c7cd", "#b9c0c8", "#b5bcc3", "#909ba5", "#8f9aa5", "#818c98", "#798590", "#697785", "#526173", "#435367", "#3a4b60", "#2e4257", "#1d3048", "#11263e", "#11273e", "#0d233a", "#020c16")

heatmap_DA <- function(team){
plot <- ggplot(data= filter(heatmap, team.name== team), aes(x = location.x, y = location.y, fill = diffs, group =diffs)) +
  geom_bin2d(binwidth = c(20, 20), position = "identity", alpha = 0.9)+
annotate("rect",xmin = 0, xmax = 120, ymin = 0, ymax = 80, fill = NA, colour = "black", size = 0.6) +
  annotate("rect",xmin = 0, xmax = 60, ymin = 0, ymax = 80, fill = NA, colour = "black", size = 0.6) +
  annotate("rect",xmin = 18, xmax = 0, ymin = 18, ymax = 62, fill = NA, colour = "white", size = 0.6) +
  annotate("rect",xmin = 102, xmax = 120, ymin = 18, ymax = 62, fill = NA, colour = "white", size = 0.6) +
  annotate("rect",xmin = 0, xmax = 6, ymin = 30, ymax = 50, fill = NA, colour = "white", size = 0.6) +
  annotate("rect",xmin = 120, xmax = 114, ymin = 30, ymax = 50, fill = NA, colour = "white", size = 0.6) +
  annotate("rect",xmin = 120, xmax = 120.5, ymin =36, ymax = 44, fill = NA, colour = "black", size = 0.6) +
  annotate("rect",xmin = 0, xmax = -0.5, ymin =36, ymax = 44, fill = NA, colour = "black", size = 0.6) +
  annotate("segment", x = 60, xend = 60, y = -0.5, yend = 80.5, colour = "white", size = 0.6)+
  annotate("segment", x = 0, xend = 0, y = 0, yend = 80, colour = "black", size = 0.6)+
  annotate("segment", x = 120, xend = 120, y = 0, yend = 80, colour = "black", size = 0.6)+
theme(rect = element_blank(),
      line = element_blank()) +
  annotate("point", x = 12 , y = 40, colour = "white", size = 1.05) +
  annotate("point", x = 108 , y = 40, colour = "white", size = 1.05) +
  annotate("path", colour = "white", size = 0.6,
           x=60+10*cos(seq(0,2*pi,length.out=2000)),
           y=40+10*sin(seq(0,2*pi,length.out=2000)))+
  annotate("point", x = 60 , y = 40, colour = "white", size = 1.05) +
  annotate("path", x=12+10*cos(seq(-0.3*pi,0.3*pi,length.out=30)), size = 0.6,
           y=40+10*sin(seq(-0.3*pi,0.3*pi,length.out=30)), col="white") +
  annotate("path", x=108-10*cos(seq(-0.3*pi,0.3*pi,length.out=30)), size = 0.6,
           y=40-10*sin(seq(-0.3*pi,0.3*pi,length.out=30)), col="white")+
  theme(axis.text.x=element_blank(),
        axis.title.x = element_blank(),
        axis.title.y = element_blank())+
  scale_y_reverse()+
  scale_fill_gradientn(colours = defensiveactivitycolors, trans = "reverse")#, labels =
   #                      scales::percent_format(accuracy = 1), limits = c(0.03, -0.03))+
  labs(title = "Where Do Teams Defend vs League Average?", subtitle = "La Liga, 2020/21") +
  coord_fixed(ratio = 95/100)
  
return(plot)
}

teams= unique(heatmap$team.name)
teams

for (team in teams){
print(toupper(team))
print(heatmap_DA(team))
}
